/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.page;

import com.formdev.flatlaf.extras.FlatSVGIcon;

import DAO.NhanVienDAO;
import DAO.PhieuDoiDAO;
import DAO.PhieuTraDAO;
import Entity.ChiTietHoaDon;
import Entity.ChiTietPhieuDoi;
import Entity.ChiTietPhieuTra;
import Entity.HoaDon;
import Entity.KhachHang;
import Entity.NhanVien;
import Entity.PhieuDoi;
import Entity.PhieuTra;
import GUI.Main;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

//import utils.Formatter;
//import utils.MessageDialog;
//import utils.RandomGenerator;
//import utils.TableSorter;
//import utils.Validation;
//import utils.WritePDF
/**
 *
 * @author ADMIN
 */
public class frmPhieuTraThem extends javax.swing.JPanel {

    private String maKH;
    private String maNV;

    public frmPhieuTraThem() {
        initComponents();
        centerAlignJTable2();
        // Tạo và hiển thị mã hóa đơn mới
        String maPhieuTra = PhieuTraDAO.taoMaPhieuTra(); // Lấy mã hóa đơn mới
        txtMaPhieuTra.setText(maPhieuTra); // Gán vào ô txtMaHoaDon

        // Tạo và hiển thị thời gian hiện tại
        String thoiGian = getCurrentTime(); // Lấy thời gian hiện tại
        txtThoiGian.setText(thoiGian); // Gán vào ô txtThoiGian
    }

    private String getCurrentTime() {
        LocalDateTime now = LocalDateTime.now(); // Lấy thời gian hiện tại
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"); // Định dạng thời gian
        return now.format(formatter); // Trả về thời gian đã định dạng
    }

    private void centerAlignJTable2() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < jTable2.getColumnCount(); i++) {
            jTable2.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jOptionPane1 = new javax.swing.JOptionPane();
        billPanel = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel54 = new javax.swing.JPanel();
        billInfoPanel = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel58 = new javax.swing.JPanel();
        btnHuy = new javax.swing.JButton();
        btnTaoPhieu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtMaPhieuTra = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        btnAddHoaDon = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtSdtKH = new javax.swing.JTextField();
        jPanel38 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        txtGioiTinh = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtThoiGian = new javax.swing.JTextField();
        jPanel59 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtNV = new javax.swing.JTextField();
        btnSearchNV = new javax.swing.JButton();
        jPanel60 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtLyDo = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtTong = new javax.swing.JTextField();

        label1.setText("label1");

        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(829, 624));
        setMinimumSize(new java.awt.Dimension(829, 624));
        setPreferredSize(new java.awt.Dimension(829, 624));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        billPanel.setBackground(new java.awt.Color(230, 245, 245));
        billPanel.setMinimumSize(new java.awt.Dimension(400, 624));
        billPanel.setLayout(new javax.swing.BoxLayout(billPanel, javax.swing.BoxLayout.Y_AXIS));

        jPanel41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(81, 219, 185), 5));
        jPanel41.setPreferredSize(new java.awt.Dimension(400, 200));
        jPanel41.setLayout(new java.awt.BorderLayout());

        jPanel42.setBackground(new java.awt.Color(0, 120, 92));
        jPanel42.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel42.setLayout(new java.awt.BorderLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Chi tiết phiếu trả");
        jPanel42.add(jLabel10, java.awt.BorderLayout.CENTER);

        jPanel41.add(jPanel42, java.awt.BorderLayout.PAGE_START);

        jPanel43.setPreferredSize(new java.awt.Dimension(400, 320));
        jPanel43.setLayout(new java.awt.BorderLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "STT", "Mã thuốc", "Tên thuốc", "Số lượng", "Giá bán", "Thành tiền"
                }));
        jScrollPane3.setViewportView(jTable2);

        jPanel43.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel41.add(jPanel43, java.awt.BorderLayout.CENTER);

        jPanel54.setBackground(new java.awt.Color(0, 120, 92));
        jPanel54.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel54.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 5));
        jPanel41.add(jPanel54, java.awt.BorderLayout.PAGE_END);

        billPanel.add(jPanel41);

        billInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        billInfoPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(81, 219, 185), 5, true));
        billInfoPanel.setPreferredSize(new java.awt.Dimension(400, 424));
        billInfoPanel.setLayout(new java.awt.BorderLayout());

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 120, 92)));
        jPanel34.setForeground(new java.awt.Color(0, 120, 92));
        jPanel34.setMinimumSize(new java.awt.Dimension(100, 60));
        jPanel34.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel34.setLayout(new java.awt.BorderLayout());

        jLabel9.setBackground(new java.awt.Color(0, 120, 92));
        jLabel9.setFont(new java.awt.Font("Roboto Medium", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 120, 92));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Phiếu trả");
        jPanel34.add(jLabel9, java.awt.BorderLayout.CENTER);

        billInfoPanel.add(jPanel34, java.awt.BorderLayout.NORTH);

        jPanel58.setBackground(new java.awt.Color(255, 255, 255));
        jPanel58.setMinimumSize(new java.awt.Dimension(400, 52));
        jPanel58.setPreferredSize(new java.awt.Dimension(400, 52));

        btnHuy.setBackground(new java.awt.Color(255, 102, 102));
        btnHuy.setFont(new java.awt.Font("Roboto Mono Medium", 0, 16)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("HỦY BỎ");
        btnHuy.setBorderPainted(false);
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.setFocusPainted(false);
        btnHuy.setFocusable(false);
        btnHuy.setPreferredSize(new java.awt.Dimension(200, 40));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel58.add(btnHuy);

        btnTaoPhieu.setBackground(new java.awt.Color(0, 204, 51));
        btnTaoPhieu.setFont(new java.awt.Font("Roboto Mono Medium", 0, 16)); // NOI18N
        btnTaoPhieu.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoPhieu.setText("TẠO PHIẾU");
        btnTaoPhieu.setBorderPainted(false);
        btnTaoPhieu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTaoPhieu.setFocusPainted(false);
        btnTaoPhieu.setFocusable(false);
        btnTaoPhieu.setPreferredSize(new java.awt.Dimension(200, 40));
        btnTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoPhieuActionPerformed(evt);
            }
        });
        jPanel58.add(btnTaoPhieu);

        billInfoPanel.add(jPanel58, java.awt.BorderLayout.PAGE_END);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(400, 200));

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));
        jPanel35.setPreferredSize(new java.awt.Dimension(400, 200));
        jPanel35.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 4));

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setPreferredSize(new java.awt.Dimension(440, 270));
        jPanel36.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMinimumSize(new java.awt.Dimension(335, 40));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel11.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel11.setText("Phiếu trả:");
        jLabel11.setPreferredSize(new java.awt.Dimension(90, 40));
        jPanel7.add(jLabel11);

        txtMaPhieuTra.setEditable(false);
        txtMaPhieuTra.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtMaPhieuTra.setFocusable(false);
        txtMaPhieuTra.setPreferredSize(new java.awt.Dimension(90, 40));
        jPanel7.add(txtMaPhieuTra);

        jLabel21.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel21.setText("Hóa đơn:");
        jLabel21.setPreferredSize(new java.awt.Dimension(60, 40));
        jPanel7.add(jLabel21);

        txtMaHD.setPreferredSize(new java.awt.Dimension(90, 40));
        jPanel7.add(txtMaHD);

        btnAddHoaDon.setIcon(new FlatSVGIcon("./icon/search.svg"));
        btnAddHoaDon.setBorderPainted(false);
        btnAddHoaDon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddHoaDon.setFocusPainted(false);
        btnAddHoaDon.setFocusable(false);
        btnAddHoaDon.setPreferredSize(new java.awt.Dimension(40, 40));
        btnAddHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHoaDonActionPerformed(evt);
            }
        });
        jPanel7.add(btnAddHoaDon);

        jPanel36.add(jPanel7);

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel8.setText("Số điện thoại:");
        jLabel8.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel37.add(jLabel8);

        txtSdtKH.setBackground(new java.awt.Color(242, 242, 242));
        txtSdtKH.setPreferredSize(new java.awt.Dimension(200, 40));
        txtSdtKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSdtKHActionPerformed(evt);
            }
        });
        jPanel37.add(txtSdtKH);

        jPanel36.add(jPanel37);

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));
        jPanel38.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel12.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel12.setText("Tên khách hàng:");
        jLabel12.setMaximumSize(new java.awt.Dimension(44, 40));
        jLabel12.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel38.add(jLabel12);

        txtTenKH.setEditable(false);
        txtTenKH.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtTenKH.setFocusable(false);
        txtTenKH.setPreferredSize(new java.awt.Dimension(200, 40));
        txtTenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKHActionPerformed(evt);
            }
        });
        jPanel38.add(txtTenKH);

        txtGioiTinh.setEditable(false);
        txtGioiTinh.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtGioiTinh.setFocusable(false);
        jPanel38.add(txtGioiTinh);

        jPanel36.add(jPanel38);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel19.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel19.setText("Thời gian:");
        jLabel19.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel8.add(jLabel19);

        txtThoiGian.setEditable(false);
        txtThoiGian.setFont(new java.awt.Font("Roboto Mono", 1, 14)); // NOI18N
        txtThoiGian.setFocusable(false);
        txtThoiGian.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel8.add(txtThoiGian);

        jPanel36.add(jPanel8);

        jPanel59.setBackground(new java.awt.Color(255, 255, 255));
        jPanel59.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel20.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel20.setText("Nhân viên:");
        jLabel20.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel59.add(jLabel20);

        txtNV.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel59.add(txtNV);

        btnSearchNV.setIcon(new FlatSVGIcon("./icon/search.svg"));
        btnSearchNV.setBorderPainted(false);
        btnSearchNV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchNV.setFocusPainted(false);
        btnSearchNV.setFocusable(false);
        btnSearchNV.setPreferredSize(new java.awt.Dimension(40, 40));
        btnSearchNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNVActionPerformed(evt);
            }
        });
        jPanel59.add(btnSearchNV);

        jPanel36.add(jPanel59);

        jPanel60.setBackground(new java.awt.Color(255, 255, 255));
        jPanel60.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel22.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel22.setText("Lý do:");
        jLabel22.setPreferredSize(new java.awt.Dimension(120, 40));
        jPanel60.add(jLabel22);

        txtLyDo.setPreferredSize(new java.awt.Dimension(200, 40));
        txtLyDo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLyDoActionPerformed(evt);
            }
        });
        jPanel60.add(txtLyDo);

        jPanel36.add(jPanel60);

        jPanel35.add(jPanel36);

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));
        jPanel44.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 0));
        jLabel13.setText("Tổng hóa đơn:");
        jLabel13.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel44.add(jLabel13);

        txtTong.setEditable(false);
        txtTong.setFont(new java.awt.Font("Roboto Mono Medium", 0, 24)); // NOI18N
        txtTong.setForeground(new java.awt.Color(255, 51, 0));
        txtTong.setFocusable(false);
        txtTong.setPreferredSize(new java.awt.Dimension(200, 40));
        txtTong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongActionPerformed(evt);
            }
        });
        jPanel44.add(txtTong);

        jPanel35.add(jPanel44);

        jScrollPane2.setViewportView(jPanel35);

        billInfoPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        billPanel.add(billInfoPanel);

        add(billPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTongActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTongActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtTongActionPerformed

    private void btnTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTaoPhieuActionPerformed
        try {
            // 1. Kiểm tra chi tiết
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng thêm sản phẩm vào phiếu trả.",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 2. Kiểm tra trường dữ liệu
            if (txtTenKH.getText().trim().isEmpty() || txtTong.getText().trim().isEmpty()
                    || txtMaHD.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "Vui lòng nhập đầy đủ thông tin khách hàng, hóa đơn gốc và tổng tiền.",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 3. Kiểm tra mã KH và NV
            if (maKH == null || maNV == null) {
                JOptionPane.showMessageDialog(this,
                        "Vui lòng tìm kiếm khách hàng và nhân viên trước khi thanh toán!",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 4. Kiểm tra hóa đơn đã trả chưa
            String maHD = txtMaHD.getText().trim();
            if (PhieuTraDAO.daTraHang(maHD)) {
                JOptionPane.showMessageDialog(this, "Hóa đơn này đã được trả trước đó!",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 5. Tạo phiếu trả
            String maPT = PhieuTraDAO.taoMaPhieuTra();
            String thoiGian = getCurrentTime(); // "dd/MM/yyyy HH:mm:ss"
            PhieuTra phieuTra = new PhieuTra();
            phieuTra.setMaPT(maPT);
            phieuTra.setMaHD(maHD.toUpperCase());
            phieuTra.setNgayLap(new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").parse(thoiGian));
            phieuTra.setMaKH(maKH);
            phieuTra.setMaNV(maNV);
            phieuTra.setLyDo(txtLyDo.getText().trim());

            // 6. Lấy chi tiết từ bảng
            List<ChiTietPhieuTra> chiTietList = layChiTietPhieuTraTuBang(maPT);
            if (chiTietList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không thể lấy chi tiết phiếu trả từ bảng.", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            phieuTra.setChiTietPhieuTra(chiTietList);

            // 7. Lưu DB + cập nhật kho
            boolean thanhCong = PhieuTraDAO.them(phieuTra);

            if (thanhCong) {
                JOptionPane.showMessageDialog(this, "Thanh toán phiếu trả thành công!", "Thông báo",
                        JOptionPane.INFORMATION_MESSAGE);
                resetForm();
                // Quay lại giao diện cập nhật hóa đơn
                frmPhieuTraCapNhat formCapNhat = new frmPhieuTraCapNhat();
                Main parentFrame = (Main) SwingUtilities.getWindowAncestor(this);
                parentFrame.replaceMainPanel(formCapNhat);
            } else {
                JOptionPane.showMessageDialog(this, "Không thể lưu phiếu trả!", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tạo phiếu trả: " + ex.getMessage(), "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnTaoPhieuActionPerformed

    private void btnAddHoaDonActionPerformed(java.awt.event.ActionEvent evt) {
        String maHD = txtMaHD.getText().trim(); // Lấy mã hóa đơn từ ô nhập

        if (maHD.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã hóa đơn!");
            return;
        }

        HoaDon hoaDon = DAO.HoaDonDAO.getHoaDonByMaHD(maHD);
        if (hoaDon == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn với mã: " + maHD);
            return;
        }
        double tongTienHoaDon = hoaDon.getTongTien();
        txtTong.setText(String.format("%.0f", tongTienHoaDon));

        KhachHang kh = hoaDon.getKhachHang();
        if (kh != null) {
            txtTenKH.setText(kh.getHoTen());
            txtSdtKH.setText(kh.getSdt());
            txtGioiTinh.setText(kh.getGioiTinh());
            maKH = kh.getId();
        }

        List<ChiTietHoaDon> danhSachChiTiet = DAO.ChiTietHoaDonDAO.getChiTietByHoaDonId(maHD);
        if (danhSachChiTiet.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy chi tiết hóa đơn với mã: " + maHD);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);

        // Đổ dữ liệu mới vào bảng với STT
        int stt = 1;
        for (ChiTietHoaDon chiTiet : danhSachChiTiet) {
            model.addRow(new Object[] {
                    stt++, // STT
                    chiTiet.getIdThuoc(),
                    chiTiet.getThuoc(),
                    chiTiet.getSoLuong(),
                    chiTiet.getDonGia(),
                    chiTiet.getThanhTien()
            });
        }

        txtTong.setText(String.format("%.0f", tongTienHoaDon));
        JOptionPane.showMessageDialog(this, "Đã tải thông tin hóa đơn thành công!");
    }// GEN-LAST:event_btnAddHoaDonActionPerformed

    private void txtSdtKHActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtSdtKHActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtSdtKHActionPerformed

    private void txtTenKHActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTenKHActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtTenKHActionPerformed

    private void btnSearchNVActionPerformed(java.awt.event.ActionEvent evt) {
        String manv = txtNV.getText().trim();

        if (!manv.isEmpty()) {
            NhanVien nv = NhanVienDAO.getNhanVienByMaNV(manv);

            if (nv != null) {
                // Hiển thị tên và chức vụ nhân viên
                txtNV.setText(nv.getHoTen());

                // Lưu maNV vào biến tạm để sử dụng sau khi thanh toán
                maNV = nv.getId();
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên!", "Thông báo",
                        JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên!", "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    // GEN-LAST:event_btnSearchNVActionPerformed
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHuyActionPerformed
        try {
            // Tạo đối tượng frmHoaDonCapNhat
            frmPhieuDoiCapNhat formCapNhat = new frmPhieuDoiCapNhat();

            // Lấy đối tượng Main (parent frame)
            Main parentFrame = (Main) SwingUtilities.getWindowAncestor(this);

            // Gọi phương thức replaceMainPanel để thay thế nội dung trong mainPanel
            parentFrame.replaceMainPanel(formCapNhat);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Không thể quay lại form cập nhật hóa đơn: " + ex.getMessage(),
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnHuyActionPerformed

    private void txtLyDoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtLyDoActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtLyDoActionPerformed

    private void setThoiGianThuc() {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        txtThoiGian.setText(now.format(formatter));
    }

    private List<ChiTietPhieuTra> layChiTietPhieuTraTuBang(String maPT) {
        List<ChiTietPhieuTra> chiTietList = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            String maThuoc = model.getValueAt(i, 1).toString();
            int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
            double donGia = Double.parseDouble(model.getValueAt(i, 4).toString());

            ChiTietPhieuTra ct = new ChiTietPhieuTra(maPT, maThuoc, soLuong, donGia);
            chiTietList.add(ct);
        }

        return chiTietList;
    }

    private void resetForm() {
        try {
            // Reset text fields
            txtMaPhieuTra.setText(PhieuTraDAO.taoMaPhieuTra());
            txtMaHD.setText("");
            txtTenKH.setText("");
            txtSdtKH.setText("");
            txtLyDo.setText("");
            txtNV.setText(""); // Nếu đây là mã nhân viên

            // Xoá dữ liệu bảng
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setRowCount(0);

            // (Tuỳ chọn) focus lại input đầu tiên
            txtMaHD.requestFocus();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi reset form: " + ex.getMessage(),
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel billInfoPanel;
    private javax.swing.JPanel billPanel;
    private javax.swing.JButton btnAddHoaDon;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnSearchNV;
    private javax.swing.JButton btnTaoPhieu;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private java.awt.Label label1;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtLyDo;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaPhieuTra;
    private javax.swing.JTextField txtNV;
    private javax.swing.JTextField txtSdtKH;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtThoiGian;
    private javax.swing.JTextField txtTong;
    // End of variables declaration//GEN-END:variables
}