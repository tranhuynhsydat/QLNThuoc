/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.page;

import DAO.NhanVienDAO;
import DAO.PhieuNhapDAO;

import Entity.NhanVien;
import Entity.PhieuNhap;
import GUI.Main;
import GUI.form.formThemNCC;
import GUI.form.formSuaNV;
import GUI.form.formThemNV;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author roxan
 */
public class frmPhieuNhapCapNhat extends javax.swing.JPanel {

    private int startIndex = 0;

    /**
     * Creates new form NewJPanel
     */
    public frmPhieuNhapCapNhat() {
        initComponents();
        configureTable();
        loadDataToTable();
        // Thêm sự kiện cuộn bảng
        jScrollPane1.getVerticalScrollBar().addAdjustmentListener(e -> {
            JScrollBar vertical = jScrollPane1.getVerticalScrollBar();
            int max = vertical.getMaximum();
            int current = vertical.getValue();
            int visible = vertical.getVisibleAmount();

            // Kiểm tra nếu người dùng đã cuộn đến cuối bảng
            if (current + visible >= max) {
                startIndex += 10;  // Tăng chỉ mục bắt đầu để tải dữ liệu tiếp theo
                loadDataToTable();  // Tải thêm dữ liệu
            }
        });

    }

    private void configureTable() {
        // Ngăn không cho phép người dùng chỉnh sửa bảng
        jTable1.setDefaultEditor(Object.class, null);  // Điều này vô hiệu hóa khả năng chỉnh sửa của bất kỳ ô nào trong bảng.

        // Căn giữa cho tất cả các cell trong bảng
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        // Căn giữa cho từng cột
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // Ngăn không cho phép chọn nhiều dòng
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    }

  private void loadDataToTable() {
    SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() throws Exception {
            startIndex=0;
            List<PhieuNhap> danhSachPhieuNhap = PhieuNhapDAO.getPhieuNhapBatch(startIndex, 10); // Tải thêm dữ liệu
            System.out.println("Dữ liệu nhận được từ DB: " + danhSachPhieuNhap.size() + " dòng");
            if (danhSachPhieuNhap == null || danhSachPhieuNhap.isEmpty()) {
                System.out.println("Không có dữ liệu để tải.");
            } else {
                SwingUtilities.invokeLater(() -> {
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.setRowCount(0);  // Xóa dữ liệu cũ trong bảng

                    // Thêm dữ liệu mới vào bảng
                    for (PhieuNhap pn : danhSachPhieuNhap) {
                        Object[] rowData = {
                            pn.getMaPN(),
                            pn.getNhanVien()!= null ? pn.getNhanVien().getHoTen(): null,
                            pn.getNhaCungCap()!= null ? pn.getNhaCungCap().getTenNhaCungCap(): null,
                            pn.getTrangThai(),
                            pn.getThoiGian(),
                        };
                        model.addRow(rowData);  // Thêm dòng vào bảng
                    }

                    model.fireTableDataChanged();  // Đảm bảo bảng được làm mới
                    jTable1.revalidate();  // Cập nhật lại bảng
                    jTable1.repaint();  // Vẽ lại bảng
                });
            }
            return null;
        }
    };
    worker.execute();
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnPanel = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(829, 624));
        setPreferredSize(new java.awt.Dimension(829, 624));
        setLayout(new java.awt.BorderLayout());

        tablePanel.setMinimumSize(new java.awt.Dimension(829, 452));
        tablePanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 120, 92));
        jPanel1.setMinimumSize(new java.awt.Dimension(829, 50));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(829, 50));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel2.setBackground(new java.awt.Color(69, 142, 168));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Danh sách phiếu nhập");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel2, java.awt.BorderLayout.CENTER);

        tablePanel.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Tên NV", "Tên NCC", "Trạng thái phiếu", "Thời gian lập"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setDragEnabled(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(jTable1);

        tablePanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(tablePanel, java.awt.BorderLayout.CENTER);

        btnPanel.setBackground(new java.awt.Color(222, 222, 222));
        btnPanel.setPreferredSize(new java.awt.Dimension(655, 51));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 8);
        flowLayout1.setAlignOnBaseline(true);
        btnPanel.setLayout(flowLayout1);

        btnThem.setBackground(new java.awt.Color(0, 120, 92));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setMaximumSize(new java.awt.Dimension(85, 35));
        btnThem.setMinimumSize(new java.awt.Dimension(85, 35));
        btnThem.setPreferredSize(new java.awt.Dimension(105, 35));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        btnPanel.add(btnThem);

        btnXoa.setBackground(new java.awt.Color(0, 120, 92));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xoá");
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.setMaximumSize(new java.awt.Dimension(85, 35));
        btnXoa.setMinimumSize(new java.awt.Dimension(85, 35));
        btnXoa.setPreferredSize(new java.awt.Dimension(105, 35));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        btnPanel.add(btnXoa);

        btnXacNhan.setBackground(new java.awt.Color(0, 120, 92));
        btnXacNhan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setText("Xác nhận");
        btnXacNhan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXacNhan.setMaximumSize(new java.awt.Dimension(85, 35));
        btnXacNhan.setMinimumSize(new java.awt.Dimension(85, 35));
        btnXacNhan.setPreferredSize(new java.awt.Dimension(105, 35));
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        btnPanel.add(btnXacNhan);

        add(btnPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // Kiểm tra nếu có dòng được chọn trong JTable
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String maNV = jTable1.getValueAt(selectedRow, 0).toString();  // Lấy mã nhân viên từ cột đầu tiên

            // Hiển thị hộp thoại xác nhận xóa
            int response = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa nhân viên này?",
                    "Xác nhận", JOptionPane.YES_NO_OPTION);

            // Nếu người dùng chọn Yes, thực hiện xóa
            if (response == JOptionPane.YES_OPTION) {
                // Gọi hàm xóa nhân viên trong DAO
                if (NhanVienDAO.xoa(maNV)) {
                    JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công!");
                    loadDataToTable();  // Làm mới bảng sau khi xóa
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa nhân viên thất bại!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên để xóa!");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
try {
        // Tạo đối tượng frmHoaDonThem
        frmPhieuNhapThem formThem = new frmPhieuNhapThem();

        // Lấy đối tượng Main (parent frame)
        Main parentFrame = (Main) SwingUtilities.getWindowAncestor(this);
        
        // Gọi phương thức replaceMainPanel để thay thế nội dung trong mainPanel
        parentFrame.replaceMainPanel(formThem);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this,
                "Không thể mở form thêm phiếu nhập: " + ex.getMessage(),
                "Lỗi", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnPanel;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
}
